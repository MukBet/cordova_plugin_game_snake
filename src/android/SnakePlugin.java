package cordova.plugin.snake;

import android.os.Vibrator;
import android.content.Context;

import org.apache.cordova.*;
import org.json.JSONArray;
import org.json.JSONException;
import android.util.Log; // üëà –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏–º–ø–æ—Ä—Ç
import android.content.pm.PackageManager;
import android.hardware.camera2.CameraManager;

public class SnakePlugin extends CordovaPlugin {
    private static final String TAG = "SnakePlugin";
    
    @Override
    public boolean execute(String action, JSONArray args, CallbackContext callbackContext) throws JSONException {
        Log.d(TAG, "execute called with action: " + action); // ‚úÖ –ª–æ–≥ –ø—Ä–∏ –ª—é–±–æ–º –≤—ã–∑–æ–≤–µ
        if ("vibrate".equals(action)) {
            Log.d(TAG, "Vibration requested");
            int duration = args.getInt(0);
            Vibrator vibrator = (Vibrator) cordova.getActivity().getSystemService(Context.VIBRATOR_SERVICE);
            if (vibrator != null) {
                vibrator.vibrate(duration);
                callbackContext.success("–í–∏–±—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞");
            } else {
                callbackContext.error("–í–∏–±—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω");
            }
            return true;
        }
        if ("coolMethod".equals(action)) {
            String arg = args.getString(0); // –ø–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç
            Log.d("SnakePlugin", "coolMethod –≤—ã–∑–≤–∞–Ω —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º: " + arg);

            // –ó–¥–µ—Å—å –º–æ–∂–µ—à—å –¥–µ–ª–∞—Ç—å —á—Ç–æ —É–≥–æ–¥–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä:
            String result = "–ü—Ä–∏–≤–µ—Ç –∏–∑ Java, —Ç—ã –ø–µ—Ä–µ–¥–∞–ª: " + arg;
            //callbackContext.success(result);

            if (!cordova.getActivity().getPackageManager().hasSystemFeature(PackageManager.FEATURE_CAMERA_FLASH)) {
                Log.d("SnakePlugin", "–§–æ–Ω–∞—Ä–∏–∫ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è " + arg);
                callbackContext.error("–§–æ–Ω–∞—Ä–∏–∫ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è");
                return true;
            }

            try {
                CameraManager cameraManager = (CameraManager) cordova.getActivity().getSystemService(Context.CAMERA_SERVICE);
                String cameraId = cameraManager.getCameraIdList()[0];
                Log.d("SnakePlugin", "cameraId:"+cameraId);

                if ("turn-oon-flash".equalsIgnoreCase(arg)) {
                    // –í–∫–ª—é—á–∞–µ–º –≤—Å–ø—ã—à–∫—É
                    cameraManager.setTorchMode(cameraId, true);
                    Log.d(TAG, "–§–æ–Ω–∞—Ä–∏–∫ –≤–∫–ª—é—á—ë–Ω –Ω–∞ 0.5 —Å–µ–∫");

                    // –ß–µ—Ä–µ–∑ 500 –º—Å –≤—ã–∫–ª—é—á–∞–µ–º
                    new android.os.Handler().postDelayed(() -> {
                        try {
                            cameraManager.setTorchMode(cameraId, false);
                            Log.d(TAG, "–§–æ–Ω–∞—Ä–∏–∫ –≤—ã–∫–ª—é—á–µ–Ω –ø–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏");
                        } catch (Exception e) {
                            Log.e(TAG, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ —Ñ–æ–Ω–∞—Ä–∏–∫–∞", e);
                        }
                    }, 500);

                    callbackContext.success("–§–æ–Ω–∞—Ä–∏–∫ –º–∏–≥–Ω—É–ª");
                    return true;
                }
                else
                {
                    boolean enable = "turn-oon".equalsIgnoreCase(arg);
                    boolean disable = "turn-oof".equalsIgnoreCase(arg);
                    if(enable)
                    {
                        cameraManager.setTorchMode(cameraId, true);
                        Log.d("SnakePlugin", "–§–æ–Ω–∞—Ä–∏–∫" + (enable ? "–≤–∫–ª—é—á—ë–Ω" : "–≤—ã–∫–ª—é—á–µ–Ω"));
                    }
                    else if(disable)
                    {
                        cameraManager.setTorchMode(cameraId, false);
                        Log.d("SnakePlugin", "–§–æ–Ω–∞—Ä–∏–∫" + (!disable ? "–≤–∫–ª—é—á—ë–Ω" : "–≤—ã–∫–ª—é—á–µ–Ω"));
                    }

                    callbackContext.success("–§–æ–Ω–∞—Ä–∏–∫ " + (enable ? "–≤–∫–ª—é—á—ë–Ω" : "–≤—ã–∫–ª—é—á–µ–Ω"));
                }
            } catch (Exception e) {
                Log.d("SnakePlugin", "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ñ–æ–Ω–∞—Ä–∏–∫–æ–º");
                Log.e("SnakePlugin", "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ñ–æ–Ω–∞—Ä–∏–∫–æ–º", e);
                callbackContext.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ñ–æ–Ω–∞—Ä–∏–∫–æ–º: " + e.getMessage());
            }

            return true;
        }
        return false; // https://cordova.apache.org/docs/en/dev/guide/platforms/android/plugin.html
    }
}
